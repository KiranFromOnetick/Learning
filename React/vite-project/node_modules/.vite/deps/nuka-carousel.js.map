{
  "version": 3,
  "sources": ["../../nuka-carousel/src/hooks/use-carousel.tsx", "../../nuka-carousel/src/Carousel/Carousel.tsx", "../../nuka-carousel/src/hooks/use-interval.tsx", "../../nuka-carousel/src/hooks/use-paging.tsx", "../../nuka-carousel/src/hooks/use-debounced.tsx", "../../nuka-carousel/src/hooks/use-measurement.tsx", "../../nuka-carousel/src/utils/array.ts", "../../nuka-carousel/src/utils/css.ts", "../../nuka-carousel/src/utils/browser.ts", "../../nuka-carousel/src/hooks/use-resize-observer.tsx", "../../nuka-carousel/src/hooks/use-hover.tsx", "../../nuka-carousel/src/hooks/use-keyboard.tsx", "../../nuka-carousel/src/hooks/use-reduced-motion.tsx", "../../nuka-carousel/src/Carousel/NavButtons.tsx", "../../nuka-carousel/src/Carousel/PageIndicators.tsx", "../../nuka-carousel/dist/#style-inject:#style-inject", "../../nuka-carousel/src/Carousel/Carousel.css"],
  "sourcesContent": ["import React, { useContext } from 'react';\n\nimport { CarouselProps } from '../types';\n\ntype CarouselContextType = CarouselProps & {\n  currentPage: number;\n  scrollOffset: number[];\n  totalPages: number;\n  goToPage: (idx: number) => void;\n  goForward: () => void;\n  goBack: () => void;\n};\n\nconst CarouselContext = React.createContext<CarouselContextType>(\n  {} as unknown as CarouselContextType,\n);\nexport const CarouselProvider = CarouselContext.Provider;\n\nexport const useCarousel = () => {\n  const context = useContext(CarouselContext);\n  return context;\n};\n", "import { forwardRef, useEffect, useImperativeHandle, useRef } from 'react';\n\nimport { useInterval } from '../hooks/use-interval';\nimport { usePaging } from '../hooks/use-paging';\nimport { useDebounced } from '../hooks/use-debounced';\nimport { useMeasurement } from '../hooks/use-measurement';\nimport { useHover } from '../hooks/use-hover';\nimport { useKeyboard } from '../hooks/use-keyboard';\nimport { useReducedMotion } from '../hooks/use-reduced-motion';\nimport { CarouselProvider } from '../hooks/use-carousel';\nimport { CarouselProps, SlideHandle } from '../types';\nimport { cls, nint } from '../utils';\nimport { NavButtons } from './NavButtons';\nimport { PageIndicators } from './PageIndicators';\n\nimport './Carousel.css';\n\nconst defaults = {\n  arrows: <NavButtons />,\n  autoplay: false,\n  autoplayInterval: 3000,\n  dots: <PageIndicators />,\n  id: 'nuka-carousel',\n  keyboard: true,\n  scrollDistance: 'screen',\n  showArrows: false,\n  showDots: false,\n  swiping: true,\n  wrapMode: 'nowrap',\n} satisfies Partial<CarouselProps>;\n\nexport const Carousel = forwardRef<SlideHandle, CarouselProps>(\n  (props: CarouselProps, ref) => {\n    const options = { ...defaults, ...props };\n\n    const {\n      afterSlide,\n      arrows,\n      autoplay,\n      autoplayInterval,\n      beforeSlide,\n      children,\n      className,\n      dots,\n      id,\n      keyboard,\n      scrollDistance,\n      showArrows,\n      showDots,\n      swiping,\n      title,\n      wrapMode,\n    } = options;\n\n    const carouselRef = useRef<HTMLDivElement | null>(null);\n    const containerRef = useRef<HTMLDivElement | null>(null);\n\n    // -- update page count and scroll offset based on scroll distance\n    const { totalPages, scrollOffset } = useMeasurement({\n      element: containerRef,\n      scrollDistance,\n    });\n\n    // -- paging\n    const { currentPage, goBack, goForward, goToPage } = usePaging({\n      totalPages,\n      wrapMode,\n    });\n\n    // -- handle touch scroll events\n    const onContainerScroll = useDebounced(() => {\n      if (!containerRef.current) return;\n\n      // find the closest page index based on the scroll position\n      const scrollLeft = containerRef.current.scrollLeft;\n      const closestPageIndex = scrollOffset.indexOf(\n        nint(scrollOffset, scrollLeft),\n      );\n      goToPage(closestPageIndex);\n    }, 100);\n\n    // -- keyboard nav\n    useKeyboard({\n      element: carouselRef,\n      enabled: keyboard,\n      goForward,\n      goBack,\n    });\n\n    // -- forward events to ref\n    useImperativeHandle(ref, () => ({ goForward, goBack, goToPage }), [\n      goForward,\n      goBack,\n      goToPage,\n    ]);\n\n    // -- autoplay\n    const isHovered = useHover({ element: containerRef, enabled: autoplay });\n    const prefersReducedMotion = useReducedMotion({ enabled: autoplay });\n    const autoplayEnabled = autoplay && !(isHovered || prefersReducedMotion);\n    useInterval(goForward, autoplayInterval, autoplayEnabled);\n\n    // -- scroll container when page index changes\n    useEffect(() => {\n      if (containerRef.current) {\n        beforeSlide && beforeSlide();\n        containerRef.current.scrollLeft = scrollOffset[currentPage];\n        afterSlide && setTimeout(() => afterSlide(), 0);\n      }\n    }, [currentPage, scrollOffset, beforeSlide, afterSlide]);\n\n    const containerClassName = cls(\n      'nuka-container',\n      showArrows === 'hover' && 'nuka-container-auto-hide',\n      className,\n    );\n\n    const providerValues = {\n      ...options,\n      totalPages,\n      currentPage,\n      scrollOffset,\n      goBack,\n      goForward,\n      goToPage,\n    };\n\n    return (\n      <CarouselProvider value={providerValues}>\n        <div\n          className={containerClassName}\n          aria-labelledby=\"nuka-carousel-heading\"\n          tabIndex={keyboard ? 0 : undefined}\n          ref={carouselRef}\n          id={id}\n        >\n          {title && (\n            <h3 id=\"nuka-carousel-heading\" className=\"nuka-hidden\">\n              {title}\n            </h3>\n          )}\n          <div className=\"nuka-slide-container\">\n            <div\n              className=\"nuka-overflow\"\n              ref={containerRef}\n              onTouchMove={onContainerScroll}\n              id=\"nuka-overflow\"\n              data-testid=\"nuka-overflow\"\n              style={{ touchAction: swiping ? 'pan-x' : 'none' }}\n            >\n              <div\n                className=\"nuka-wrapper\"\n                id=\"nuka-wrapper\"\n                data-testid=\"nuka-wrapper\"\n              >\n                {children}\n              </div>\n            </div>\n            {showArrows && arrows}\n          </div>\n        </div>\n        {showDots && dots}\n      </CarouselProvider>\n    );\n  },\n);\n\nCarousel.displayName = 'Carousel';\n", "import { useEffect, useRef } from 'react';\n\ntype CallbackFunction = (...args: never[]) => void;\n\nexport function useInterval(\n  callback: CallbackFunction,\n  delay: number,\n  enabled = true,\n) {\n  const _callback = useRef<CallbackFunction>();\n\n  useEffect(() => {\n    _callback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (enabled && delay !== null) {\n      const id = setInterval(() => {\n        if (_callback.current) _callback.current();\n      }, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay, enabled]);\n}\n", "import { useState } from 'react';\n\nimport { CarouselProps } from '../types';\n\ntype UsePagingReturnType = {\n  currentPage: number;\n  goToPage: (idx: number) => void;\n  goForward: () => void;\n  goBack: () => void;\n};\n\ntype PagingProps = {\n  totalPages: number;\n  wrapMode: CarouselProps['wrapMode'];\n};\n\nexport function usePaging({\n  totalPages,\n  wrapMode,\n}: PagingProps): UsePagingReturnType {\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const goToPage = (idx: number) => {\n    if (idx < 0 || idx >= totalPages) return;\n    setCurrentPage(idx);\n  };\n\n  const goForward = () => {\n    if (wrapMode === 'wrap') {\n      setCurrentPage((prev) => (prev + 1) % totalPages);\n    } else {\n      setCurrentPage((prev) => Math.min(prev + 1, totalPages - 1));\n    }\n  };\n\n  const goBack = () => {\n    if (wrapMode === 'wrap') {\n      setCurrentPage((prev) => (prev - 1 + totalPages) % totalPages);\n    } else {\n      setCurrentPage((prev) => Math.max(prev - 1, 0));\n    }\n  };\n\n  return { currentPage, goToPage, goForward, goBack };\n}\n", "import { useCallback, useRef } from 'react';\n\ntype CallbackFunction = (...args: never[]) => void;\n\nexport function useDebounced(callback: CallbackFunction, delay: number) {\n  const timerRef = useRef<NodeJS.Timeout>();\n\n  return useCallback(\n    (...args: never[]) => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n\n      timerRef.current = setTimeout(() => {\n        callback(...args);\n      }, delay);\n    },\n    [callback, delay],\n  );\n}\n", "import { useEffect, useState } from 'react';\n\nimport { arraySeq, arraySum } from '../utils';\nimport { useResizeObserver } from './use-resize-observer';\n\ntype MeasurementProps = {\n  element: React.RefObject<HTMLDivElement>;\n  scrollDistance: number | 'slide' | 'screen';\n};\n\nexport function useMeasurement({ element, scrollDistance }: MeasurementProps) {\n  const [totalPages, setTotalPages] = useState(0);\n  const [scrollOffset, setScrollOffset] = useState(arraySeq(totalPages, 0));\n  const dimensions = useResizeObserver(element);\n\n  useEffect(() => {\n    const container = element.current;\n    if (!(container && dimensions)) return;\n\n    // determine the width of the content that is not visible (overflow)\n    // we ignore the bounding box width because its a float\n    // and scrollWidth is an integer, so it creates an imperfect\n    // calculation when the scrollWidth is a few pixels larger\n    const scrollWidth = container.scrollWidth;\n    const visibleWidth = container.offsetWidth;\n    const remainder = scrollWidth - visibleWidth;\n\n    if (visibleWidth === 0) return;\n\n    switch (scrollDistance) {\n      case 'screen': {\n        const pageCount = Math.round(scrollWidth / visibleWidth);\n\n        setTotalPages(pageCount);\n        setScrollOffset(arraySeq(pageCount, visibleWidth));\n        break;\n      }\n      case 'slide': {\n        // creates an array of slide widths in order to support\n        // slides of varying widths as children\n        const children =\n          container.querySelector('#nuka-wrapper')?.children || [];\n        const offsets = Array.from(children).map(\n          (child) => (child as HTMLElement).offsetWidth,\n        );\n\n        // shift the scroll offsets by one to account for the first slide\n        const scrollOffsets = arraySum([0, ...offsets.slice(0, -1)]);\n\n        // find the index of the scroll offset that is greater than\n        // the remainder of the full width and window width\n        const pageCount =\n          scrollOffsets.findIndex((offset) => offset >= remainder) + 1;\n\n        setTotalPages(pageCount);\n        setScrollOffset(scrollOffsets);\n        break;\n      }\n      default: {\n        if (typeof scrollDistance === 'number' && scrollDistance > 0) {\n          // find the number of pages required to scroll all the slides\n          // to the end of the container\n          const pageCount = Math.ceil(remainder / scrollDistance) + 1;\n\n          setTotalPages(pageCount);\n          setScrollOffset(arraySeq(pageCount, scrollDistance));\n        }\n      }\n    }\n  }, [element, scrollDistance, dimensions]);\n\n  return { totalPages, scrollOffset };\n}\n", "/**\n * Creates an zero based array of numbers each multiplied by initialValue\n * @param length The length of the array\n * @param initialValue The seed value that each element will be multiplied by\n * @returns An array of numbers\n */\nexport function arraySeq(length: number, initialValue: number): number[] {\n  return new Array(length).fill(0).map((_, i) => i * initialValue);\n}\n\n/**\n * Creates an array where each element is the sum of all previous elements\n * @param values The seed array\n * @returns An array of numbers\n */\nexport function arraySum(values: number[]): number[] {\n  let sum = 0;\n  return values.map((value) => (sum += value));\n}\n\n/**\n * Finds the nearest number in an array to a target number\n * @returns A number\n */\nexport function nint(array: number[], target: number): number {\n  return array.reduce((prev, curr) =>\n    Math.abs(curr - target) < Math.abs(prev - target) ? curr : prev,\n  );\n}\n", "type ClassName = string | boolean | undefined;\n\nexport function cls(...classes: ClassName[]) {\n  return classes.filter(Boolean).join(' ');\n}\n", "export const isBrowser = () => typeof window !== 'undefined';\n", "import { RefObject, useEffect, useState } from 'react';\n\nexport function useResizeObserver(element: RefObject<HTMLElement>) {\n  const [dimensions, setDimensions] = useState<DOMRect>();\n\n  useEffect(() => {\n    if (!element.current) return;\n\n    const target = element.current;\n\n    const observer = new ResizeObserver(() =>\n      setDimensions(target.getBoundingClientRect()),\n    );\n\n    observer.observe(target);\n    return () => {\n      observer.unobserve(target);\n    };\n  }, [element]);\n\n  return dimensions;\n}\n", "import { useEffect, useState } from 'react';\nimport type { RefObject } from 'react';\n\nexport function useHover<T extends HTMLElement>({\n  element,\n  enabled,\n}: {\n  element: RefObject<T>;\n  enabled: boolean;\n}) {\n  const [hovered, setHovered] = useState(false);\n\n  const target = element?.current;\n\n  useEffect(() => {\n    if (!(target && target.addEventListener)) return;\n\n    if (enabled) {\n      const onMouseOver = () => setHovered(true);\n      const onMouseOut = () => setHovered(false);\n\n      target.addEventListener('mouseover', onMouseOver);\n      target.addEventListener('mouseout', onMouseOut);\n\n      return () => {\n        target.removeEventListener('mouseover', onMouseOver);\n        target.removeEventListener('mouseout', onMouseOut);\n      };\n    }\n  }, [target, enabled]);\n\n  return hovered;\n}\n", "import { useEffect } from 'react';\nimport type { RefObject } from 'react';\n\nexport function useKeyboard<T extends HTMLElement>({\n  element,\n  enabled,\n  goForward,\n  goBack,\n}: {\n  element: RefObject<T>;\n  enabled: boolean;\n  goForward: () => void;\n  goBack: () => void;\n}) {\n  const target = element?.current;\n\n  useEffect(() => {\n    if (target && enabled) {\n      const onKeyDown = (e: KeyboardEvent) => {\n        if (e.key === 'ArrowLeft') {\n          goBack();\n        } else if (e.key === 'ArrowRight') {\n          goForward();\n        }\n      };\n      target.addEventListener('keydown', onKeyDown);\n      return () => target.removeEventListener('keydown', onKeyDown);\n    }\n  }, [enabled, goBack, goForward, target]);\n}\n", "import { useEffect, useState } from 'react';\n\nimport { isBrowser } from '../utils';\n\nconst QUERY = '(prefers-reduced-motion: no-preference)';\nconst getInitialState = () =>\n  isBrowser() ? !window.matchMedia(QUERY).matches : true;\n\nexport function useReducedMotion({ enabled }: { enabled: boolean }) {\n  const [reduceMotion, setReducedMotion] = useState(getInitialState);\n\n  useEffect(() => {\n    if (!(isBrowser() && enabled)) return;\n\n    const mediaQueryList = window.matchMedia(QUERY);\n\n    const listener = (event: MediaQueryListEvent) => {\n      setReducedMotion(!event.matches);\n    };\n\n    mediaQueryList.addEventListener('change', listener);\n\n    return () => {\n      mediaQueryList.removeEventListener('change', listener);\n    };\n  }, [enabled]);\n  return reduceMotion;\n}\n", "import { useCarousel } from '../hooks/use-carousel';\nimport { cls } from '../utils';\n\nexport function NavButtons() {\n  const { currentPage, totalPages, wrapMode, goBack, goForward } =\n    useCarousel();\n\n  const allowWrap = wrapMode !== 'nowrap';\n\n  const enablePrevNavButton = allowWrap || currentPage > 0;\n  const enableNextNavButton = allowWrap || currentPage < totalPages - 1;\n\n  const prevNavClassName = cls(\n    'nuka-nav-button',\n    'nuka-nav-button-prev',\n    enablePrevNavButton && 'nuka-nav-button-enabled',\n  );\n\n  const nextNavClassName = cls(\n    'nuka-nav-button',\n    'nuka-nav-button-next',\n    enableNextNavButton && 'nuka-nav-button-enabled',\n  );\n\n  return (\n    <>\n      <div className={prevNavClassName} onClick={goBack}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentcolor\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M11.78 5.22a.75.75 0 0 1 0 1.06L8.06 10l3.72 3.72a.75.75 0 1 1-1.06 1.06l-4.25-4.25a.75.75 0 0 1 0-1.06l4.25-4.25a.75.75 0 0 1 1.06 0Z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </div>\n      <div className={nextNavClassName} onClick={goForward}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentcolor\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M8.22 5.22a.75.75 0 0 1 1.06 0l4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.75.75 0 0 1-1.06-1.06L11.94 10 8.22 6.28a.75.75 0 0 1 0-1.06Z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </div>\n    </>\n  );\n}\n", "import { useCarousel } from '../hooks/use-carousel';\nimport { cls } from '../utils';\n\nexport const PageIndicators = () => {\n  const { totalPages, currentPage, goToPage } = useCarousel();\n\n  const className = (index: number) =>\n    cls(\n      'nuka-page-indicator',\n      currentPage === index ? 'nuka-page-indicator-active' : '',\n    );\n\n  return (\n    <div className=\"nuka-page-container\" data-testid=\"pageIndicatorContainer\">\n      {[...Array(totalPages)].map((_, index) => (\n        <button\n          key={index}\n          onClick={() => goToPage(index)}\n          className={className(index)}\n        >\n          <span className=\"nuka-hidden\">{index + 1}</span>\n        </button>\n      ))}\n    </div>\n  );\n};\n", "\n          export default function styleInject(css, { insertAt } = {}) {\n            if (!css || typeof document === 'undefined') return\n          \n            const head = document.head || document.getElementsByTagName('head')[0]\n            const style = document.createElement('style')\n            style.type = 'text/css'\n          \n            if (insertAt === 'top') {\n              if (head.firstChild) {\n                head.insertBefore(style, head.firstChild)\n              } else {\n                head.appendChild(style)\n              }\n            } else {\n              head.appendChild(style)\n            }\n          \n            if (style.styleSheet) {\n              style.styleSheet.cssText = css\n            } else {\n              style.appendChild(document.createTextNode(css))\n            }\n          }\n          ", "import styleInject from '#style-inject';styleInject(\".nuka-hidden {\\n  position: absolute;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  margin: -1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0);\\n  white-space: nowrap;\\n  border-width: 0;\\n}\\n.nuka-container {\\n  position: relative;\\n}\\n.nuka-slide-container {\\n  position: relative;\\n}\\n.nuka-overflow {\\n  overflow: scroll;\\n  scroll-behavior: smooth;\\n  -ms-overflow-style: none;\\n  scrollbar-width: none;\\n}\\n.nuka-overflow::-webkit-scrollbar {\\n  display: none;\\n}\\n.nuka-wrapper {\\n  display: flex;\\n}\\n.nuka-nav-button {\\n  position: absolute;\\n  top: calc(50% - 2rem);\\n  margin: 1rem;\\n  display: none;\\n  height: 2rem;\\n  width: 2rem;\\n  cursor: pointer;\\n  background-color: rgba(146, 148, 151, 0.5);\\n  color: white;\\n  border-radius: 9999px;\\n  font-size: 1rem;\\n  user-select: none;\\n}\\n.nuka-nav-button.nuka-nav-button-prev {\\n  left: 0;\\n  margin-right: 1rem;\\n}\\n.nuka-nav-button.nuka-nav-button-next {\\n  right: 0;\\n  margin-left: 1rem;\\n}\\n.nuka-nav-button:hover {\\n  background-color: rgba(146, 148, 151, 0.65);\\n}\\n.nuka-nav-button-enabled {\\n  display: block;\\n}\\n.nuka-container-auto-hide .nuka-nav-button {\\n  display: none;\\n}\\n.nuka-container-auto-hide:hover .nuka-nav-button-enabled {\\n  display: block;\\n}\\n.nuka-page-container {\\n  padding-top: 1rem;\\n  padding-bottom: 1rem;\\n  display: flex;\\n  gap: 0.5rem;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.nuka-page-indicator {\\n  width: 0.75rem;\\n  height: 0.75rem;\\n  cursor: pointer;\\n  border-radius: 9999px;\\n  border-style: none;\\n  background-color: rgba(146, 148, 151, 0.65);\\n}\\n.nuka-page-indicator.nuka-page-indicator-active,\\n.nuka-page-indicator.nuka-page-indicator-active:hover {\\n  background-color: rgb(229 231 235 / 1);\\n}\\n.nuka-page-indicator:hover {\\n  background-color: rgb(229 231 235 / 1);\\n}\\n\")"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_runtime", "React", "useRef", "useState", "useEffect", "jsx", "jsxs"]
}
